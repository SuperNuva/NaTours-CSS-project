/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/


* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom,
  #7ed56fac, 
  #28b485a7), 
  url(../img/hero.jpg);
  background-size: cover; /* it matches the size of the header box */ 
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.logo-box {
  position: absolute;
  top: 40px; /* The px count is in relation to its parent element that hasa position relative. in This case, it is the header element. */
  left: 40px;
}

.logo {
  height: 35px;
}

.logo:hover {
  animation: moveInRIght 1s ease-out;
}

.text-box {
  position: absolute;
  top: 40%; /* this is in relation to the parent element */
  left: 50%;
  transform: translate(-50%, -50%); /* how much we want to shift the element by, in relation to itself */
  text-align: center; /* to have the button in center, as the button is treated as an inline text */
}

.heading-primary {
  color: #ffffff;
  text-transform: uppercase;

  backface-visibility: hidden; /* to fix the shaking of the main and sub title */
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block; /* block elements take up the entire width of the parent element and adds line breaks before and after them. */
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
 
  /*
  animation-iteration-count: 3;
  animation-delay: 3s;
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px)
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px; /* 200/500px wiil be the same*/
  transition: all .2s; /* the transition property has to on the initial state */
  position: relative;
}

.btn:hover {
  transform: translateY(-3px); /* to move up, it has to be a negative number*/
  box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
  background-color: white;
  color: #777;
}

/*
/* this pseudoclass is for the button expansion animation-not that necessary

.btn::after {
  content: ""; /* content and display is must 
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn-white::after {
  background-color: white;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
*/

.btn-animated {
  animation: moveInBottom .5s ease-out .75s;
  animation-fill-mode: backwards; /* automatically applies the 0% animation first */
}